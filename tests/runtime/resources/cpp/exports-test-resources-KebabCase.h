#pragma once
#include <cstdint>
#include <utility>
#include <vector>
#include <map>
#include "wit.h"
/* User class definition file, autogenerated once, then user modified
* Updated versions of this file are generated into KebabCase.template.
*/
namespace exports {namespace test {namespace resources {class KebabCase : public wit::ResourceExportBase<KebabCase>{
        uint32_t value;
        public:

        static void Dtor(resources::KebabCase* self){delete self;}
        KebabCase(uint32_t a) : value(a) {}
        static Owned New(uint32_t a){return Owned(new KebabCase(a));}
        uint32_t GetA() { return value; }
        static uint32_t TakeOwned(resources::KebabCase::Owned k) { return k->value; }
        static int32_t ResourceNew(resources::KebabCase* self);
        static KebabCase* ResourceRep(int32_t id);
        static void ResourceDrop(int32_t id);
      };

    }}}
