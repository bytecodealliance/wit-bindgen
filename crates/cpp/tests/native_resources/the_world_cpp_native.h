// Generated by `wit-bindgen` 0.3.0. DO NOT EDIT!
#ifndef __CPP_NATIVE_BINDINGS_THE_WORLD_H
#define __CPP_NATIVE_BINDINGS_THE_WORLD_H
#define WIT_HOST_DIRECT
#include <cassert>
#include <cstdint>
#include <map>
#include <utility>
#include <wit-host.h>

// guest imports (implemented here)
#include "foo-foo-resources-R.h"
namespace foo {
namespace foo {
namespace resources {
R::Owned Create();
void Borrows(std::reference_wrapper<const R> o);
void Consume(R::Owned o);
// export_interface Interface(Id { idx: 0 })
} // namespace resources
} // namespace foo
} // namespace foo
namespace exports {
namespace foo {
namespace foo {
namespace resources {
class R : public wit::ResourceExportBase {

public:
  ~R();
  R(uint32_t a);
  void Add(uint32_t b) const;
  R(wit::ResourceExportBase &&);
  R(R &&) = default;
  R &operator=(R &&) = default;
};

R Create();
void Borrows(std::reference_wrapper<const R> o);
void Consume(R &&o);
} // namespace resources
} // namespace foo
} // namespace foo
} // namespace exports

#endif
